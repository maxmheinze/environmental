# packages ----------------------------------------------------------------
library(tidyverse)
library(foreign)
library(rdrobust)
library(rddensity)
library(rddtools)
library(stargazer)
library(modelsummary)


# reading in data ---------------------------------------------------------
#source(code_01_preparation.R)

setwd("/Users/gustavpirich/Library/Mobile Documents/com~apple~CloudDocs/Wirtschaftsuniversitaet/SSE/environmental_economics/lareg_assignment/data")
#data <- read.csv("transformed_data.csv")

edited_final_yellow <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/Wirtschaftsuniversitaet/SSE/environmental_economics/lareg_assignment/data/edited_final_yellow.csv", sep=";")
edited_final_yellow <- edited_final_yellow %>%
  select(!X)

# For summarising rdrobust models: https://stackoverflow.com/que --------

tidy.rdrobust <- function(model, ...) {
  ret <- data.frame(
    term = row.names(model$coef),
    estimate = model$coef[, 1],
    std.error = model$se[, 1],
    p.value = model$pv[, 1]
  )
  row.names(ret) <- NULL
  ret
}

# # For summarising rdrobust models: https://stackoverflow.com/que --------


glance.rdrobust <- function(model, ...) {
  ret <- data.frame(
    Kernel = model$kernel,
    Bandwidth = model$bwselect,
    Polynomial = ifelse(model$p == 1, "Linear", ifelse(model$p == 2, "Quadratic", "OTHER")),
    Observations = sum(model$N_h)
  )
  ret
}



# Question 2  -------------------------------------------------------------



#keeping only a subsample of the respondents with estimated_gain > -400
sub_sample <- edited_final_yellow %>%
  filter(estimated_gain > -400) 


# Use ggplot2 to plot the kernel density estimate
plot_01 <- ggplot() +
  geom_density(data=sub_sample, aes(x=estimated_gain, color="Estimated Gain"), bw=50, size=1) +  # Size increased here
  geom_density(data=sub_sample, aes(x=perceived_gain, color="Perceived Gain"), bw=50, size=1) +  # And here
  scale_color_manual(values=c("Estimated Gain"="darkblue", "Perceived Gain"="orange")) +
  labs(title="Kernel Density Plot",
       x="Gain (in €/year per c.u.)",
       y="Density") +
  theme_minimal() + 
  guides(colour=guide_legend(title="Gains")) + 
  xlim(-550, 325)


par(mar = c(4, 4, 4, 1))

y_breaks <- seq(-500, 300, by = 100)
y_labels <- as.character(y_breaks)

density_estimated_gain <- density(sub_sample$estimated_gain, bw = 50)
density_perceived_gain <- density(sub_sample$perceived_gain, bw = 50)

plot(density_estimated_gain, col = "darkblue", lwd = 2, xlim = c(-550, 325), 
     main = "Kernel Density Plot",
     xlab = "Gain (in EUR/year per c.u.)", 
     ylab = "Density", cex.axis = 0.5)  # Decreased axis label size
lines(density_perceived_gain, col = "orange", lwd = 2)

# Calculate means
mean_estimated_gain <- mean(sub_sample$estimated_gain)
mean_perceived_gain <- mean(sub_sample$perceived_gain)

# Add dashed lines at the means
abline(v = mean_estimated_gain, col = "red", lwd = 2, lty = 2)
abline(v = mean_perceived_gain, col = "red", lwd = 2, lty = 2)

legend("topleft", legend = c("Estimated Gain", "Perceived Gain"), 
       col = c("darkblue", "orange"), lty = 1, lwd = 3, cex = 0.3)  # Increased legend text size

axis(side = 1, at = y_breaks, labels = y_labels, las = 1, cex.axis = 0.5)  # Decreased axis label size

ggsave("kernel_density.png", width = 6, height = 7)





# Question 3  -------------------------------------------------------------


#First creating a variable called large_bias
s_1 <- edited_final_yellow %>%
  mutate(large_bias = ifelse((abs(estimated_gain - perceived_gain) > 110 ), 1, 0)) 


#downloading original data set to add the variable yellow vest, age, and the full variable with all six cateogries for education 
s_original <- read.csv("/Users/gustavpirich/Library/Mobile Documents/com~apple~CloudDocs/Wirtschaftsuniversitaet/SSE/environmental_economics/lareg_assignment/replication/s_original.csv")

s_original <- s_original %>% 
  mutate(taxe_approbation_1 = ifelse(is.na(s_original$taxe_approbation),"NSP",taxe_approbation))

s_1$political_leaning <- as.factor(s_1$political_leaning)
s_1$political_leaning <- relevel(s_1$political_leaning, ref = c("Extreme-left"))

s_original$Yellow_Vest <- as.factor(s_original$Gilets_jaunes)
s_original$Yellow_Vest <- relevel(s_original$Yellow_Vest, ref = "oppose")

#adding variables which were NOT in the data set based of from original data
s_1$age <- s_original$age
s_1$highereducation <- (s_original$Diplome>=5)
s_1$Yellow_Vest <- s_original$Yellow_Vest

variables <- c("age","statut_emploi","csp","education","household_size","respondent_income",
               "household_income","nb_14_et_plus", "nb_adultes","fume","actualite",
               "uc","niveau_vie","age_18_24","age_25_34", "age_35_49")

formula_final <- paste("large_bias ~ tax_approval + (sexe=='Féminin') + as.factor(town_size) + highereducation + region + 
                                     environmentalist + political_leaning + (uc) + Yellow_Vest + age + statut_emploi + csp + education +
                                     household_size + respondent_income + household_income + nb_14_et_plus + nb_adultes + fume + actualite +
                                     uc + niveau_vie + age_18_24 + age_25_34 + age_35_49")

mod_2 <- lm(formula_final, data = s_1, weight = s_1$weight)
summary(mod_2)

Table_heterogenous_bias <- stargazer(mod_2, 
                                     out = "text", 
                                     title = "Determinants of bias in subjective gains",
                                     label = "table2",
                                     dep.var.labels = c("Large bias"), dep.var.caption = "", header = FALSE,
                                     keep = c("tax_approvalNSP", "tax_approvalOui", "Yellow_Vest", "environmentalist", "political_leaningCenter", "political_leaningExtreme-right", "political_leaningIndeterminate", "political_leaningLeft", "political_leaningRight"),
                                     order = c("tax_approvalNSP", "tax_approvalOui",
                                               "Yellow_VestNSP",
                                               "Yellow_Vestcomprend", 
                                               "Yellow_Vestsoutient",
                                               "Yellow_Vestest_dedans", 
                                               "environmentalist", 
                                               "political_leaningLeft", 
                                               "political_leaningCenter",
                                               "political_leaningRight", 
                                               "political_leaningExtreme-right", 
                                               "political_leaningIndeterminate"),
                                     covariate.labels = c("Initial tax: PNR (I don't know)", 
                                                          "Initial tax: Approves",
                                                          "Yellow Vests: PNR",
                                                          "Yellow Vests: understands","Yellow Vests: supports", 
                                                          "Yellow Vests: is part",
                                                          "Ecologist", 
                                                          "Left-right: Left", 
                                                          "Left-right: Center", 
                                                          "Left-right: Right", 
                                                          "Left-right: Extreme-right", 
                                                          "Left-right: Indeterminate"),
                                     omit.table.layout = 'n',
                                     add.lines = list(c("Controls: Socio-demo, Political Leaning", "\\checkmark", "\\checkmark", "\\checkmark")),
                                     omit.stat=c("adj.rsq", "f", "ser", "ll", "aic"))


#Question 4.b

s_1 <- edited_final_yellow %>%
  mutate(win_dummy = ifelse(estimated_gain > 1, 1, 0))

plot(s_1$estimated_gain, s_1$win_dummy)

#Main outcome variable is "believes does not lose"
s_1$believes_does_not_lose <- s_1$winner_feedback != "Perdant"


#density plot
add_x_break <- function(plot, xval) {
  
  p2 <- ggplot_build(plot)
  breaks <- p2$layout$panel_params[[1]]$x$breaks
  breaks <- breaks[!is.na(breaks)]
  
  plot +
    geom_vline(xintercept = xval, color = "red", linetype = "dashed") +
    scale_x_continuous(breaks = sort(c(xval, breaks)))
}

P <- ggplot() +
  geom_density(aes(x = s_1$estimated_gain)) +
  ggtitle("Density of the Running Variable") +
  xlab("Your Custom X-axis Label") +
  xlab("Estimated Gain")

add_x_break(P, -300) 


#Plot dropping low-level outliers
s_2 <- s_1 %>% 
  filter(estimated_gain > -300) %>%
  filter(variante_taxe_info == "f")

rdplot(x= s_2$estimated_gain, 
       y= s_2$believes_does_not_lose, 
       c=0, 
       weights = s_2$weight,
       x.label = expression(paste("Estimated Gain" (hat(gamma)))),
       y.label = "Probability believes does not lose", 
       p=2)



#ggsave("../figures_tables/rd_plot_within.png", width = 6, height = 6)





# question 4.c --------------------------------------------------------------


s_3 <- s_1 %>% 
  filter(variante_taxe_info == "f")

rdd1 <- rdrobust(y=s_3$believes_does_not_lose, x=s_3$estimated_gain, c=0, weights = s_3$weight)

rdd2 <- rdrobust(y=s_3$believes_does_not_lose, x=s_3$estimated_gain, c=0, weights = s_3$weight, h=50, kernel = "uniform")

rdd3 <- rdrobust(y=s_3$believes_does_not_lose, x=s_3$estimated_gain, c=0, weights = s_3$weight, kernel="uniform")

rdd4 <- rdrobust(y=s_3$believes_does_not_lose, x=s_3$estimated_gain, c=0, weights = s_3$weight, p = 2)

modelsummary(list(rdd1,rdd2,rdd3,rdd4), 
             output = "latex_tabular",
             fmt = 3, 
             statistic = c("({std.error})", "[{p.value}]")) 






          

