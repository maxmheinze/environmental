# packages ----------------------------------------------------------------

library(foreign)
library(rdrobust)
library(rddensity)
library(rddtools)
library(stargazer)


# reading in data ---------------------------------------------------------
setwd("/Users/gustavpirich/Library/Mobile Documents/com~apple~CloudDocs/Wirtschaftsuniversitaet/SSE/environmental_economics/lareg_assignment/code")

source(code_01_preparation.R)

setwd("/Users/gustavpirich/Library/Mobile Documents/com~apple~CloudDocs/Wirtschaftsuniversitaet/SSE/environmental_economics/lareg_assignment/data")
data <- read.csv("transformed_data.csv")



# Question 2  -------------------------------------------------------------



#keeping only a subsample of the respondents with estimated_gain > -400
sub_sample <- data %>%
  filter(estimated_gain > -400) 

plot(density_simule_gain$x, density_simule_gain$y, col="blue", lwd=2, type = "l")
lines(density_gain$x, density_gain$y, col="red", lwd=2)

# Use ggplot2 to plot the kernel density estimate
plot_01 <- ggplot() +
  geom_density(data=sub_sample, aes(x=estimated_gain, fill="Estimated Gain"), bw=50, alpha=0) +
  geom_density(data=sub_sample, aes(x=perceived_gain, fill="Perceived Gain"), bw=50, alpha=0) +
  scale_fill_manual(values=c("Estimated Gain"="darkblue", "Perceived Gain"="orange")) +
  labs(title="Kernel Density Plot",
       x="Gain (in €/year per c.u.)",
       y="Density") +
  theme_minimal() + 
  guides(fill=guide_legend(title="Gains")) + 
  xlim(-550, 325)

plot_01 <- ggplot() +
  geom_density(data=sub_sample, aes(x=estimated_gain, color="Estimated Gain"), bw=50, size=1) +  # Size increased here
  geom_density(data=sub_sample, aes(x=perceived_gain, color="Perceived Gain"), bw=50, size=1) +  # And here
  scale_color_manual(values=c("Estimated Gain"="darkblue", "Perceived Gain"="orange")) +
  labs(title="Kernel Density Plot",
       x="Gain (in €/year per c.u.)",
       y="Density") +
  theme_minimal() + 
  guides(colour=guide_legend(title="Gains")) + 
  xlim(-550, 325)


#ggsave("plot_01.png")


# Question 3
#First creating a variable called large_bias
s_1 <- sub_sample %>%
  mutate(large_bias = ifelse((abs(estimated_gain - perceived_gain) > 110 ), 1, 0)) %>%
  filter(estimated_gain > -400)

#variables_demo_bias <- variables_demo 
#variables_demo_bias <- variables_demo_bias[!(variables_demo_bias %in% c("sexe", "age_50_64", "age_65_plus", "taille_agglo"))]

#formula <- as.formula(paste("large_bias ~ tax_approval + (sexe=='Féminin') + as.factor(taille_agglo) + (Diplome>=5) + revenu + 
                                     #ecologiste + Gauche_droite + uc + Gilets_jaunes + ", paste(variables_demo_bias, collapse=' + ')))

#formula <- as.formula(paste(large_bias ~ tax_approval + (sexe=='Féminin') + as.factor(taille_agglo) + (Diplome>=5) + revenu + 
#                              ecologiste + Gauche_droite + uc + Gilets_jaunes + , paste(variables_demo_bias, collapse=' + ')))
s_1$political_leaning <- as.factor(s_1$political_leaning)

# Rename the levels
levels(s_1$political_leaning) <- c("extreme_left", "left", "center", "right", "extreme_right", "indeterminate")

formula <- as.formula(paste("large_bias ~  tax_approval_nsp + tax_approval_yes + yv_pnr + yv_understands + yv_supports + yv_is_part + environmentalist + respondent_income + household_income + sexe + region + town_size + as.factor(education) + as.factor(political_leaning)")) 

mod_1 <- lm(formula, weights = s_1$weight, data = s_1)
summary(mod_1)

Table_heterogenous_bias <- stargazer(mod_1, out = "latex",
                                     title="Determinants of bias in subjective gains", model.names = T, model.numbers = FALSE, #star.cutoffs = c(0.1, 1e-5, 1e-30), # "Diploma: Bachelor or above", 
                                     #covariate.labels = c("Initial tax: Approves",
                                     #                     "Yellow Vests: PNR","Yellow Vests: understands","Yellow Vests: supports", "Yellow Vests: is part",
                                     #                     "Ecologist", "Left-right: Left", "Left-right: Center", "Left-right: Right", "Left-right: Extreme-right", "Left-right: Indeterminate"),
                                     dep.var.labels = c("Large bias ($\\left|\\widehat{\\gamma}-g\\right| > 110$)"), dep.var.caption = "", header = FALSE,
                                     keep = c("tax_approval_nsp", "tax_approval_yes", "yv_pnr", "yv_understands", "yv_supports", "yv_is_part", "yv_is_part", "environmentalist", "political_leaning"),
                                     #order = c("tax_approval", "Gilets_jaunes", "ecologiste", "Gauche_droite"),
                                     omit.table.layout = 'n', star.cutoffs = NA,
                                     #coef = list(NULL, logit_bias_margins[,1], NULL),
                                     #se = list(NULL, logit_bias_margins[,2], NULL),
                                     add.lines = list(c("Controls: Socio-demo, political leaning", "\\checkmark", "\\checkmark", "\\checkmark")),
                                     no.space=TRUE, intercept.bottom=FALSE, intercept.top=TRUE, omit.stat=c("adj.rsq", "f", "ser", "ll", "aic"), label="tab:bias")


#Rproducing the graph in
s_1 <- s_1 %>%
  mutate(win_dummy = ifelse(estimated_gain > 1, 1, 0))

#plot(s_1$estimated_gain, s_1$win_dummy)

# Main outcome variable is "believes does not lose"
s_1$believes_does_not_lose <- s_1$winner_feedback != "Perdant"

#Plot dropping low-level outliers
s_2 <- s_1 %>% 
  filter(estimated_gain > -300) %>%
  filter(variante_taxe_info == "f")

rdplot(y=s_2$believes_does_not_lose, x=s_2$estimated_gain, c=0, weights=s_2$weight,
       x.label = expression(paste("simule_gain (", hat(gamma), ")")),
       y.label = "Probability believes does not lose", p=2)




ggsave("../figures_tables/rd_plot_within.png", width = 6, height = 6)

plot(s_1$simule_gain, s_1$win_dummy)

lm(win_dummy ~ simule_gain, data = s_1)
